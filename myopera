#!/bin/sh

function sanitize_url {
	for i in "$@"; do
		if [ "${i:0:1}" == "-" ]; then 
			printf "%s" "$i"
		else
			fileurl="file://localhost/"`echo -n "${i}" | od -t x1 | cut -b 8- | tr -d "\n\r" | tr " " "%"`
			printf "%s" "$fileurl"
		fi
	done
};

sanitize_url "$@"
exit

# Required for Session Management
case $0 in /*) OPERA_SCRIPT_PATH=$0;; *) OPERA_SCRIPT_PATH=`/bin/pwd`/$0;; esac
export OPERA_SCRIPT_PATH

# Location of the Opera binaries
OPERA_BINARYDIR=/usr/lib/opera/9.23-20070809.5/
export OPERA_BINARYDIR

die () {
    echo "$@" >&2
    exit 1
}
# Parse commandline parameters
toset=
_QTSTYLE_FROM_CMDLINE_='NO'
for arg
do
  if test "$toset"
  then
      eval $toset='$arg'
      export $toset
      toset=
  else
      case $arg in
          --binarydir*|-binarydir*) toset=OPERA_BINARYDIR ;;
          --personaldir*|-personaldir*|--pd*|-pd*)
              toset=OPERA_PERSONALDIR
              ;;
          --style|-style)
              _QTSTYLE_FROM_CMDLINE_='YES'
              ;;
      esac
  fi
done
test -z "$toset" || die "Missing parameter for $arg"
test "${_QTSTYLE_FROM_CMDLINE_}" = 'NO' && test -f "$HOME/.qt/qtrc" && _OPERA_QTSTYLE=`sed -n 's/^style=//p' $HOME/.qt/qtrc` && test "$_OPERA_QTSTYLE" && set -- "$@" -style "$_OPERA_QTSTYLE"

# Add ending path divider "/" if missing, so execution won't fail
if test `echo ${OPERA_BINARYDIR} | sed -e 's/.*[^\/]$/NO/'` = 'NO'; then
OPERA_BINARYDIR="${OPERA_BINARYDIR}/"
fi
if test ! -f "${OPERA_BINARYDIR}opera"; then
    echo "The Opera binary is not located at \"${OPERA_BINARYDIR}opera\"."
    echo "Please modify the wrapper script at \"${0}\"."
    exit 1
elif test ! -x "${OPERA_BINARYDIR}opera"; then
    echo "You do not have execute rights on \"${OPERA_BINARYDIR}opera\", please ask the sysadmin to chmod +x it."
    exit 1
fi

# Opera enviroment
if test "${OPERA_DIR}" = '' ; then
  if test -d /usr/share/opera/ ; then
    OPERA_DIR=/usr/share/opera/
  else
    echo "OPERA_DIR unset and not in default location (/usr/share/opera/)"
    exit 1
  fi
fi
export OPERA_DIR

OPERA_LD_PRELOAD="${LD_PRELOAD}"
export OPERA_LD_PRELOAD

# Java tramples this - using %D ensures the default stays in (X11R6 and later):
if [ -z "$XFILESEARCHPATH" ]
then
    XFILESEARCHPATH='%D'
    export XFILESEARCHPATH
fi

# Native Java enviroment
if test -f "${OPERA_PERSONALDIR}/javapath.txt"
then
    INIJAVA=`cat ${OPERA_PERSONALDIR}/javapath.txt`
    if test -f "${INIJAVA}/libjava.so"; then OPERA_JAVA_DIR="${INIJAVA}"; fi
fi

if test ! "${OPERA_JAVA_DIR}"
then
    if test -f "${HOME}/.opera/javapath.txt"
    then
        INIJAVA=`cat ${HOME}/.opera/javapath.txt`
        if test -f "${INIJAVA}/libjava.so"; then OPERA_JAVA_DIR="${INIJAVA}"; fi
    fi
fi

if test ! "${OPERA_JAVA_DIR}"
then
    if test -f "${JAVA_HOME}/lib/i386/libjava.so"; then OPERA_JAVA_DIR="${JAVA_HOME}/lib/i386" ; fi
fi

if test -z "${OPERA_JAVA_DIR}"
then
    if test -f "${JAVA_HOME}/jre/lib/i386/libjava.so"; then OPERA_JAVA_DIR="${JAVA_HOME}/jre/lib/i386" ; fi
fi

if test ! "${OPERA_JAVA_DIR}"
then

    PREFIXES="/usr /usr/java /usr/lib /usr/local /opt"

    for SUNJAVA in \
	java-1.5.0-sun-1.5.0.06 \
	java-1.5.0-sun-1.5.0.06/jre \
	java-1.5.0-sun-1.5.0.05 \
	java-1.5.0-sun-1.5.0.05/jre \
	java-1.5.0-sun-1.5.0.04 \
	java-1.5.0-sun-1.5.0.04/jre \
	jre1.5.0_06 \
	jdk1.5.0_06/jre \
	jre1.5.0_05 \
	jdk1.5.0_05/jre \
	jre1.5.0_04 \
	jdk1.5.0_04/jre \
	jre1.5.0_03 \
	jdk1.5.0_03/jre \
	jre1.5.0_02 \
	jdk1.5.0_02/jre \
	jre1.5.0_01 \
	jdk1.5.0_01/jre \
	jdk1.5.0/jre \
	j2re1.4.2_06 \
	j2sdk1.4.2_06/jre \
	j2re1.4.2_04 \
	j2sdk1.4.2_04/jre \
	j2re1.4.2_03 \
	j2sdk1.4.2_03/jre \
	j2re1.4.2_02 \
	j2sdk1.4.2_02/jre \
	j2re1.4.2_01 \
	j2sdk1.4.2_01/jre \
	jdk1.4.2/jre \
	j2re1.4.2 \
	j2sdk1.4.2/jre \
	j2re1.4.1_01 \
	j2re1.4.1 \
	SUNJava2-1.4.1 \
	BlackdownJava2-1.4.1/jre \
	jdk1.4.1/jre \
	j2re1.4.0_01 \
	j2sdk1.4.0_01/jre \
	j2re1.4.0 \
	jre1.4.0 \
	jdk1.4.0/jre \
	j2se/1.4/jre \
	j2se/jre \
	jre1.3.1_15 \
	jre1.3.1_04 \
	jre1.3.1_02 \
	jre1.3.1_01 \
	jdk1.3.1/jre \
	j2re1.3.1 \
	jre1.3.1 \
	j2re1.3 \
	j2se/1.3/jre \
	SunJava2-1.3/jre \
	java2re \
	jdk1.2.2/jre \
	jdk1.2/jre \
	jre \
	java
    do
	for PREFIX in ${PREFIXES}
	do
	    if test -f "${PREFIX}/${SUNJAVA}/lib/i386/libjava.so"; then OPERA_JAVA_DIR="${PREFIX}/${SUNJAVA}/lib/i386" && break; fi
	done
	if test "${OPERA_JAVA_DIR}"; then break; fi
    done

    if test -z "${OPERA_JAVA_DIR}"
    then
	for IBMJAVA in \
	    IBMJava2-142/jre \
	    IBMJava2-141/jre \
	    IBMJava2-14/jre \
	    IBMJava2-131/jre \
	    jre1.3.0/jre
	do
	    for PREFIX in ${PREFIXES}
	    do
		if test -f "${PREFIX}/${IBMJAVA}/bin/libjava.so"; then OPERA_JAVA_DIR="${PREFIX}/${IBMJAVA}/bin" && break; fi
	    done
	    if test "${OPERA_JAVA_DIR}"; then break; fi
	done
    fi
fi

if test "${OPERA_JAVA_DIR}"
then
    LD_LIBRARY_PATH="${OPERA_JAVA_DIR}:${OPERA_JAVA_DIR}/native_threads:${OPERA_JAVA_DIR}/client:${OPERA_JAVA_DIR}/classic${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH OPERA_JAVA_DIR
fi

if [ -z "$AWT_TOOLKIT" ]
then # Prefer raw X over Motif, to avoid libXm version/location complications:
    AWT_TOOLKIT=XToolkit
    export AWT_TOOLKIT
fi

# Workarounds for the "preloaded libXt" problem.
LD_PRELOAD="libjvm.so:libawt.so:${OPERA_LD_PRELOAD}"
export LD_PRELOAD
# To disable the first workaround, comment the next line.
JAVA_WORKAROUND=`${OPERA_BINARYDIR}/works 2>/dev/null`

if test "${JAVA_WORKAROUND}" = 'works'
then OPERA_FORCE_JAVA_ENABLED="1"
else
    LD_PRELOAD="libjava.so:${LD_PRELOAD}"
    # To disable the second workaround, comment the next line.
    IBMJAVA131_WORKAROUND=`${OPERA_BINARYDIR}/works 2>/dev/null`
    if test "${IBMJAVA131_WORKAROUND}" = 'works'
    then OPERA_FORCE_JAVA_ENABLED="1"
    else LD_PRELOAD="${OPERA_LD_PRELOAD}"
    fi
fi
export LD_PRELOAD OPERA_FORCE_JAVA_ENABLED

# Acrobat Reader
for ACROBATBINDIR in \
    /usr/local/Adobe/Acrobat7.0/bin \
    /usr/lib/Acrobat7.0/bin \
    /usr/X11R6/lib/Acrobat7.0/bin \
    /opt/Acrobat7.0/bin \
    /usr/Acrobat7.0/bin \
    /usr/local/Acrobat7/bin \
    /usr/lib/Acrobat7/bin \
    /usr/X11R6/lib/Acrobat7/bin \
    /opt/Acrobat7/bin \
    /usr/Acrobat7/bin \
    /usr/local/Acrobat5/bin \
    /usr/lib/Acrobat5/bin \
    /usr/X11R6/lib/Acrobat5/bin \
    /opt/Acrobat5/bin \
    /usr/Acrobat5/bin \
    /opt/acroread-5.07/bin/ \
    /usr/local/Acrobat4/bin \
    /usr/lib/Acrobat4/bin \
    /usr/X11R6/lib/Acrobat4/bin \
    /opt/Acrobat4/bin \
    /usr/Acrobat4/bin \
    ; do
    if test -d "${ACROBATBINDIR}" ; then PATH="${PATH}:${ACROBATBINDIR}"; fi
done

LD_LIBRARY_PATH="${OPERA_BINARYDIR}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH

# Spellchecker needs to find libaspell.so.15 
for LIBASPELL_DIR in \
    /usr/local/lib \
    /usr/lib \
    /opkg/lib \
; do
    if test -f "${LIBASPELL_DIR}/libaspell.so.15"; then
        LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LIBASPELL_DIR}"
    fi
done

# Running Opera
exec "${OPERA_BINARYDIR}opera" "$@"
