#!/bin/sh

# function to stop commit
die () {
  echo >&2 "  ***  Commit aborted: " "$1"
  exit 1
}

FAIL=''
append_fail () {
  FAIL=`printf "%s%s: %s \n" "$FAIL" "$1" "$2"`
}

# find files affected by commit

files=`(git diff --cached --name-only --diff-filter=A; git diff --cached --name-only) |\
  egrep '\.cgi$|\.pl$|\.t$|\.pm$' | sort -u`

# set up perl lib
PERL5LIB=/www/lib
export PERL5LIB

# check selected files
for i in $files; do
  # skip deleted files
  [ -f "$i" ] || continue

  echo "$i"
  perl -Ilib -wc "$i" || append_fail "$i" "Syntax error"
#  perl -wne '/\t/ and exit 1' "$i"|| append_fail "$i" "Tabs in file"
  perl -wne '/\s\n/ and exit 1' "$i" || append_fail "$i" "Spaces at EOL"
done 

for i in `echo "$files" | grep 'lib/.*\.pm$'`; do 
  [ -f "$i" ] || continue
  echo "module $i"
  perl -Mstrict -Ilib -w "$i" || append_fail "$i" "Module won't run in strict mode"
  perlcritic "$i" || append_fail "$i" "Perl critic"
  git diff --cached $i | grep '^+.*\$VERSION' || append_fail "$i" "No version change"
done

# echo "FAIL=$FAIL" 
[ -z "$FAIL" ] || die "Some files had errors: 
$FAIL"

# make sure tests pass
make || die "Make failed"
make test || die "Tests fail, use TODO or fix"

# die "test" 
